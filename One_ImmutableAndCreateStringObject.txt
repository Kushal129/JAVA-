import java . *;
package string_example;
/*
String str = "abc";

You are calling the intern() method on String. 
This method references an internal pool of String objects. 
If the String you called intern() on already resides 
in the pool, then a reference to that String is assigned 
to str. If not, then the new String is placed in the pool, 
and a reference to it is then assigned to str.

Given the following code:

String str = "abc";
String str2 = "abc";
boolean identity = str == str2;

When you check for object identity by doing == 
(you are literally asking: do these two references point 
to the same object?), you get true.

However, you don't need to intern() Strings. 
You can force the creation on a new Object on the Heap 
by doing this:

String str = new String("abc");
String str2 = new String("abc");
boolean identity = str == str2;

In this instance, str and str2 are references to different 
Objects, neither of which have been interned, 
so that when you test for Object identity using ==, 
you will get false.

In terms of good coding practice: do not use == to check 
for String equality, use .equals() instead.

Java string are immutable object type. - that means 
it cannot be change.
Like,

String str="abc pqr"
str.replace("abc","xyz");
System.out.println(str); // It will still print 'abc pqr' - because 
JAVA String is immutable type

Solution is,

String str="abc pqr"
String str2=str.replace("abc","xyz");
System.out.println(str2); // Output:  xyz pqr
System.out.println(str); // Output: abc pqr

*/

class One_ImmutableAndCreateStringObject
{
	public static void main(String args[])
	{
		//String str1="abc";
		//String str2="abc";

		/*if(str1==str2)
		{
			System.out.println("True");
		}
		else
		{
			System.out.println("False");
		}

		String str3=new String("abc");
		String str4=new String("abc");

		if(str3==str4)
		{
			System.out.println("True");
		}
		else
		{
			System.out.println("False");
		}	

		if(str3.equals(str4))
		{
			System.out.println("True");
		}
		else
		{
			System.out.println("False");
		}*/	


		String str5="abc pqr";
		str5.replace("abc","xyz");
		System.out.println(str5); //abc pqr
		String str6=str5.replace("abc","xyz");
		System.out.println(str6); //xyz pqr
		
		
		
		//Reference
		
		/*String str="Hello";
		String str1="HELLO BMIIT";*/
		if(str5==str6)
			System.out.println("True");
		else	
			System.out.println("False");
			

	}
}
