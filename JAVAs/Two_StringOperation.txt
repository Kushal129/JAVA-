package string_example;
/*
public class Two_StringOperation {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}*/
class Two_StringOperation
{
 public static void main(String args[])
 {
//------------------------------------------------------------------------------------------
// ---------------------------  String Constructors   --------------------------------------
//------------------------------------------------------------------------------------------
	// ----- 1. Empty string ------------

		String str1=new String();
		System.out.println("\n Value of str1 is : " + str1);

	// ----- 2. Initializing string value -----	

		String str2=new String("Babu Madhav Institute of Information Technology");
		System.out.println("\n Value of str2 is : " + str2);

	// ----- 3. Character Array --------

		char arr1[]={'B', 'M', 'I', 'I', 'T'};
		String str3=new String(arr1);
		System.out.println("\n Value of str3 is : " + str3);

	// ----- 4. Passing string object -----
		
		String str4=new String(str3);
		System.out.println("\n Value of str4 is : " + str4);

	// ----- 5. byte Array --------

		byte arr2[]={65, 66, 67, 68, 69, 70};
		String str5=new String(arr2);
		System.out.println("\n Value of str5 is : " + str5);	



	// ----- 6. Sub character and bytes ------

		// Synatx: (arrayname, Start index, total number of character)

		String str6=new String(arr1,2,3);
		System.out.println("\n Value of str6 is : " + str6);

		String str7=new String(arr2,0,3);
		System.out.println("\n Value of str7 is : " + str7);			

//---------------------------------String Functions--------------------------------------------
// --------------------------------------------------------------------------------------------
// 		 String length =>> s.length(); -> return int
// --------------------------------------------------------------------------------------------
System.out.println(" _____________________________________");

		int len=str2.length();
		System.out.println("\n Length of str2 is : " + len);

		System.out.println("\n Length of str3 is : " + str3.length());
// ---------------------------------------------------------------------------------------------
//   Special String Operation =>> String literals, Concatenation, String conversion and toString
// ---------------------------------------------------------------------------------------------
	// ------- 1. String Literal ----------

		System.out.println(" _____________________________________");
		String str8="Uka Tarsadia University";

		System.out.println("\n Value of str8 is : " + str8);
		System.out.println("\n Length of str8 is : " + str8.length());

		System.out.println("\n Length of UKA TARSADIA UNIVERSITY is : " + "UKA TARSADIA UNIVERSITY".length());

	// ------- 2. String Concatenation --------

		System.out.println(" _____________________________________");
		String str9="Institute is : " + str2 + ", University is : " + str8;
		System.out.println("\n Value of str9 is : " + str9);
		System.out.println("\n Value of concat method is : " + str2.concat(str8));

	// ------- 3. String Concatenation with other data type --------

		System.out.println(" _____________________________________");
		int age=18;
		String str10="He is " + age + " years old.";
		
		System.out.println("\n Value of str10 is : " + str10);	

		String str11="Four means : " + 2 + 2;
		System.out.println("\n Value of str11 is : " + str11);

		String str12="Four means : " + (2 + 2);
		System.out.println("\n Value of str12 is : " + str12);

	// ------- 4. toString() : Detrermine string representation -------

		String str13=str10;
		System.out.println("\n Value of str13 is : " + str13.toString());




// ------------------------------------------------------------------------------------
//   Character Extraction =>> charAt(), getChars(), getBytes() and toCharArray()
// ------------------------------------------------------------------------------------
	// ------- 1. charAt() : Extract single character, return char ------

		//Syntax: StringObject.charAt(index)
		
		System.out.println(" _____________________________________");
		char val=str2.charAt(5);
		System.out.println("\n Value of character at 6 position in str2 is : " + val);

	// ------- 2. getChars() : Extract more than one characters, return char[] ------
		
		//Syntax: stringObject.getChars(int srcBeginIndex, int srcEndIndex, char[] destination, int dstBeginIndex)

		// It will print from srcBeginIndex to srcEndIndex-1

		System.out.println(" \n _____________________________________\n \n");
		int startIndex=5;
		int endIndex=10;
		char arr3[]=new char[endIndex-startIndex];
				
		str2.getChars(startIndex,endIndex,arr3,0);
		
		System.out.println("\n Value of sub string is : " + arr3);
		System.out.println("\n Value of sub string is : " + String.valueOf(arr3));

		for(int i=0;i<arr3.length;i++)
		{
			System.out.print(arr3[i]);
		}		
		
	// ------- 3. getBytes() : Represent byte value, return byte[] --------


		System.out.println(" _____________________________________");
		String str14="ABCD";
		byte arr4[]=str14.getBytes();

		System.out.println("\n Value of str14 is : " + str14);
		System.out.println("\n Byte value of str14 is : ");

		for(int i=0;i<arr4.length;i++)
		{
			System.out.print("\t" + arr4[i]);	
		}
		System.out.println();

	
	// ------ 4. toCharArray() : Convert string to character array, returns char[] ------

		System.out.println(" _____________________________________");

		String str15="Hello world";
		System.out.println("\n Value of str15 is : " + str15);
		
		char arr5[]=str15.toCharArray();

		System.out.println("\n str15 converted to character array as : ");

		for(int j=0;j<arr5.length;j++)
		{
			System.out.print("\t" + arr5[j]);
		}
		System.out.println();



// ------------------------------------------------------------------------------------------------------------------
//   String Comparision =>> equals(), equalsIgnoreCase(), * regionMatches(), startsWith(), endsWith() and CompareTo()
// ------------------------------------------------------------------------------------------------------------------
		
	// ------ 1.equals() : Compare two string for equality, returns boolean ------

		System.out.println(" _____________________________________");
		String str16="Hello";
		String str17=new String(str16);
		String str18="Bye";
		String str19="HELLO";
		
		System.out.println("\n " + str16 + " equals " + str17 + " is " + str16.equals(str17));
		System.out.println("\n " + str16 + " equals " + str18 + " is " + str16.equals(str18));
		System.out.println("\n " + str16 + " equals " + str19 + " is " + str16.equals(str19));




	// ----- 2. equalsIgnoreCase() : Compare two string for equality, return boolean ------

		System.out.println(" _____________________________________");

		System.out.println("\n " + str16 + " equals ignore case " + str19 + " is " + str16.equalsIgnoreCase(str19));




	// ------ 3. regionMatches() : compare specific region inside a string with another specific region in another string, return boolean ------

//syntax:  stringObject.regionMatches(int startIndex, String str2, int str2StartIndex, int numOfCharacterToCompare)

//syntax:  stringObject.regionMatches(boolean ignorecase,int startIndex, String str2, int str2StartIndex,int numOfCharacterToCompare)


		String str20=new String("I love Java programming");
		String str21=new String("Java");
		String str22=new String("JAVA");

		System.out.println("\n Value of str20 is : " + str20);
		System.out.println("\n Value of str21 is : " + str21);
		System.out.println("\n Value of str22 is : " + str22);

		System.out.println("\n Finding str21 into str20 is : " + str20.regionMatches(7,str21,0,4));

		System.out.println("\n Finding str21 into str20 is : " + str20.regionMatches(8,str21,1,3)); 

		System.out.println("\n Finding str22 into str20 is : " + str20.regionMatches(7,str22,0,4));

		System.out.println("\n Finding str22 into str20 is : " + str20.regionMatches(true,7,str22,0,4));



	// ----- 4. startsWith() : Determine whether given string is starts with specified string, returns boolean ----	
		// syntax: stringObject.startsWith(String str)

		// syntax: stringObject.startsWith(String str, int startIndex)
			

		System.out.println(" _____________________________________");
	
		String str23="Hello, second year students";
		String str24="Hello";
		String str25="students";

		System.out.println("\n Value of str23 is : " + str23);
		System.out.println("\n Value of str24 is : " + str24);
		System.out.println("\n Value of str25 is : " + str25);

		System.out.println("\n str23 is starts with str24 : " + str23.startsWith(str24));
		

		System.out.println("\n str23 is starts with str25 at 19th position : " + str23.startsWith(str25,19));
	

	

	// ----- 5. endsWith() : Determine whether given string is ends with specified string, returns boolean ----
		

		System.out.println(" _____________________________________");
	
		System.out.println("\n str23 is ends with str25 : " + str23.endsWith(str25));




	// ----- 6. compareTo() : Compares the given string with current string lexicographically(basis of Unicode value), returns positive number, negative number or 0.

		// if s1 > s2, it returns positive number  
		// if s1 < s2, it returns negative number  
		// if s1 == s2, it returns 0  
		String str26="hello";  
		String str27="hello";  
		String str28="meklo";  
		String str29="hemlo";  
		String str30="flag";  
		System.out.println("\n Value of str26 is : " + str26);
		System.out.println("\n Value of str27 is : " + str27);
		System.out.println("\n Value of str28 is : " + str28);
		System.out.println("\n Value of str29 is : " + str29);
		System.out.println("\n Value of str30 is : " + str30);

System.out.println("\n str26 compareTo str27 : " + str26.compareTo(str27));//0 because both are equal  
System.out.println("\n str26 compareTo str28 : " + str26.compareTo(str28));//-5 because "h" is 5 times lower than "m"  		

System.out.println("\n str26 compareTo str29 : " + str26.compareTo(str29));//-1 because "l" is 1 times lower than "m"  

System.out.println("\n str26 compareTo str30 : " + str26.compareTo(str30));//2 because "h" is 2 times greatr than "f"


	


// -----------------------------------------------------------------
//   String Searching =>> indexOf() and lastIndexOf()
// -----------------------------------------------------------------


	// ---- 1. indexOf() : Search first occurance of character or substring, return int
	
		// Syntax: 
		// int indexOf(char ch)	
		// int indexOf(char ch, int fromIndex) So it will check/search from fromIndex	
		// int indexOf(String substring)	
		// int indexOf(String substring, int fromIndex)	So it will check/search from fromIndex


		System.out.println(" _____________________________________");
		
		String str31="This is BMIIT. It is in UTU.";
		
		System.out.println("\n Value of str31 is : " + str31);

		System.out.println("\n Finding index of i in str31 : " + str31.indexOf('i'));

		System.out.println("\n Finding index of i in str31 starting from 3rd index : " + str31.indexOf('i',3));

		System.out.println("\n Finding index of is in str31 : " + str31.indexOf("is"));

		System.out.println("\n Finding index of is in str31 starting from 10th index : " + str31.indexOf("is",10));
	// ----- 2. lastIndexOf() : Search last occurance of character or substring, return int
	
		// Syntax: 
		// int lastIndexOf(char ch)	
		// int lastIndexOf(int ch, int fromIndex) So it will check fromIndex to zero	
		// int lastIndexOf(String substring)	
		// int lastIndexOf(String substring, int fromIndex) So it will check fromIndex to zero

		System.out.println(" _____________________________________");
		
		System.out.println("\n Finding last index of i in str31 : " + str31.lastIndexOf('i'));

		System.out.println("\n Finding last index of i in str31 starting from 15th index to 0th index : " + str31.lastIndexOf('i',15));

		System.out.println("\n Finding last index of is in str31 : " + str31.lastIndexOf("is"));

		System.out.println("\n Finding last index of is in str31 starting from 15th index to 0th index : " + str31.lastIndexOf("is",15));

		

// -----------------------------------------------------------------
//   Modifying String  =>> substring(), concat(), replace(), trim()
// -----------------------------------------------------------------
	// String are immutable, whenever we want to modify a string, we must either copy it into a stringBuffer or StringBuilder or use a string method that construct a new copy of the string with your modification complete.

	// ----- 1. substring(): Extracting substring ------

		//Syntax: 
		//String substring(int startIndex)
		//String substring(int startIndex, int endIndex)

		System.out.println(" _____________________________________");
		System.out.println("\n Substring example str31.substring(5) is : " + str31.substring(5));
		 
		System.out.println("\n Substring example str31.substring(5,10) is : " + str31.substring(5,10));

	// ----- 2.concat(): concatenate two string -----

		String str32="hello ";
		String str33=" students";

		String str34=str32.concat(str33);

		System.out.println("\n value of str32 is : " + str32);
		System.out.println("\n value of str33 is : " + str33);
		System.out.println("\n value of str34 is : " + str34);	

	// ----- 3. replace(): -----

		//syntax:
		//String replace(char oldChar, char newChar)
		//String replace(CharSequence target, CharSequence replacement)

		String str35="This is my lecture. This is Java programming lecture.";

		String str36=str35.replace('i','x');

		System.out.println("\n value of str35 is : " + str35);			
		System.out.println("\n value of str36 is : " + str36);	

		String str37=str35.replace("is","was");
		System.out.println("\n value of str37 is : " + str37);	




	// ----- 4. trim() : Remove all leading and trailing space ------

		String str38="             Hello world                 ";
		
		System.out.println("\n value of str38 is : " + str38);	

		System.out.println("\n value of str38 after triming is : " + str38.trim() + " Bye");			




// -----------------------------------------------------------------
//   Data Conversion =>> valueOf()
// -----------------------------------------------------------------

	
	// ----- valueOf() : converts different types of values into string, return string 

	/* Syntax:
		String valueOf(boolean b)  
		String valueOf(char c)  
		String valueOf(char[] c)  
		String valueOf(int i)  
		String valueOf(long l)  
		String valueOf(float f)  
		String valueOf(double d)  
		String valueOf(Object o)  
	*/



		int a=10;
		float b=10.5f;
	
		System.out.println("\n Example of valueOf method is : " + String.valueOf(a + "20"));
	
		System.out.println("\n Example of valueOf method is : " + String.valueOf(b + "20"));

		System.out.println("\n Example of valueOf method is : " + Integer.valueOf(a + 20));

		System.out.println("\n Example of valueOf method is : " + Float.valueOf(b + 20));	 




// -----------------------------------------------------------------
//   Changing the case of characters =>> toLowerCase() and toUpperCase()
// -----------------------------------------------------------------



		String str39="JAVA Programming Lecture";

		System.out.println("\n value of str39 is : " + str39);

		String str40=str39.toUpperCase();
	
		String str41=str39.toLowerCase();

		System.out.println("\n value of str40 after converting str39 to uppercase is : " + str40);

		System.out.println("\n value of str41 after converting str39 to lowercase is : " + str41);
	
		System.out.println("\n Converting string to uppercase using string literal is : " + "Hello World".toUpperCase());

		System.out.println("\n Converting string to lowercase using string literal is : " + "Hello WORLD".toLowerCase());


	
	

// -----------------------------------------------------------------
//   Extracting words from string =>> split()
// -----------------------------------------------------------------


		String str42="This is Java Programming lecture, I Love Java Programming, This is second lecture, Bye";

		String str43[]=str42.split(" ");

		System.out.println("\n value of str42 is : " + str42);

		System.out.println("\n value of str43 is : ");
		for(int k=0;k<str43.length;k++)
		{
			System.out.println(str43[k]);
		}	

		String str44[]=str42.split(",");

		System.out.println("\n value of str44 is : ");
		for(int k=0;k<str44.length;k++)
		{
			System.out.println(str44[k]);
		}


 }
}

